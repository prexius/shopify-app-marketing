{
  "version": 3,
  "sources": ["../../../app/routes/app._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\app._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\app._index.tsx\");\n  import.meta.hot.lastModified = \"1706217366004.7334\";\n}\n// REMIX HMR END\n\nimport { useEffect } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { useActionData, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { Page, Layout, Text, Card, Button, BlockStack, Box, List, Link, InlineStack } from \"@shopify/polaris\";\nimport { authenticate } from \"../shopify.server\";\nexport const loader = async ({\n  request\n}) => {\n  await authenticate.admin(request);\n  return null;\n};\nexport const action = async ({\n  request\n}) => {\n  const {\n    admin\n  } = await authenticate.admin(request);\n  const color = [\"Red\", \"Orange\", \"Yellow\", \"Green\"][Math.floor(Math.random() * 4)];\n  const response = await admin.graphql(`#graphql\n      mutation populateProduct($input: ProductInput!) {\n        productCreate(input: $input) {\n          product {\n            id\n            title\n            handle\n            status\n            variants(first: 10) {\n              edges {\n                node {\n                  id\n                  price\n                  barcode\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      }`, {\n    variables: {\n      input: {\n        title: `${color} Snowboard`,\n        variants: [{\n          price: Math.random() * 100\n        }]\n      }\n    }\n  });\n  const responseJson = await response.json();\n  return json({\n    product: responseJson.data?.productCreate?.product\n  });\n};\nexport default function Index() {\n  _s();\n  const nav = useNavigation();\n  const actionData = useActionData();\n  const submit = useSubmit();\n  const isLoading = [\"loading\", \"submitting\"].includes(nav.state) && nav.formMethod === \"POST\";\n  const productId = actionData?.product?.id.replace(\"gid://shopify/Product/\", \"\");\n  useEffect(() => {\n    if (productId) {\n      shopify.toast.show(\"Product created\");\n    }\n  }, [productId]);\n  const generateProduct = () => submit({}, {\n    replace: true,\n    method: \"POST\"\n  });\n  return <Page>\r\n      <ui-title-bar title=\"Remix app template\">\r\n        <button variant=\"primary\" onClick={generateProduct}>\r\n          Generate a product\r\n        </button>\r\n      </ui-title-bar>\r\n      <BlockStack gap=\"500\">\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card>\r\n              <BlockStack gap=\"500\">\r\n                <BlockStack gap=\"200\">\r\n                  <Text as=\"h2\" variant=\"headingMd\">\r\n                    Congrats on creating a new Shopify app \uD83C\uDF89\r\n                  </Text>\r\n                  <Text variant=\"bodyMd\" as=\"p\">\r\n                    This embedded app template uses{\" \"}\r\n                    <Link url=\"https://shopify.dev/docs/apps/tools/app-bridge\" target=\"_blank\" removeUnderline>\r\n                      App Bridge\r\n                    </Link>{\" \"}\r\n                    interface examples like an{\" \"}\r\n                    <Link url=\"/app/additional\" removeUnderline>\r\n                      additional page in the app nav\r\n                    </Link>\r\n                    , as well as an{\" \"}\r\n                    <Link url=\"https://shopify.dev/docs/api/admin-graphql\" target=\"_blank\" removeUnderline>\r\n                      Admin GraphQL\r\n                    </Link>{\" \"}\r\n                    mutation demo, to provide a starting point for app\r\n                    development.\r\n                  </Text>\r\n                </BlockStack>\r\n                <BlockStack gap=\"200\">\r\n                  <Text as=\"h3\" variant=\"headingMd\">\r\n                    Get started with products\r\n                  </Text>\r\n                  <Text as=\"p\" variant=\"bodyMd\">\r\n                    Generate a product with GraphQL and get the JSON output for\r\n                    that product. Learn more about the{\" \"}\r\n                    <Link url=\"https://shopify.dev/docs/api/admin-graphql/latest/mutations/productCreate\" target=\"_blank\" removeUnderline>\r\n                      productCreate\r\n                    </Link>{\" \"}\r\n                    mutation in our API references.\r\n                  </Text>\r\n                </BlockStack>\r\n                <InlineStack gap=\"300\">\r\n                  <Button loading={isLoading} onClick={generateProduct}>\r\n                    Generate a product\r\n                  </Button>\r\n                  {actionData?.product && <Button url={`shopify:admin/products/${productId}`} target=\"_blank\" variant=\"plain\">\r\n                      View product\r\n                    </Button>}\r\n                </InlineStack>\r\n                {actionData?.product && <Box padding=\"400\" background=\"bg-surface-active\" borderWidth=\"025\" borderRadius=\"200\" borderColor=\"border\" overflowX=\"scroll\">\r\n                    <pre style={{\n                  margin: 0\n                }}>\r\n                      <code>{JSON.stringify(actionData.product, null, 2)}</code>\r\n                    </pre>\r\n                  </Box>}\r\n              </BlockStack>\r\n            </Card>\r\n          </Layout.Section>\r\n          <Layout.Section variant=\"oneThird\">\r\n            <BlockStack gap=\"500\">\r\n              <Card>\r\n                <BlockStack gap=\"200\">\r\n                  <Text as=\"h2\" variant=\"headingMd\">\r\n                    App template specs\r\n                  </Text>\r\n                  <BlockStack gap=\"200\">\r\n                    <InlineStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        Framework\r\n                      </Text>\r\n                      <Link url=\"https://remix.run\" target=\"_blank\" removeUnderline>\r\n                        Remix\r\n                      </Link>\r\n                    </InlineStack>\r\n                    <InlineStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        Database\r\n                      </Text>\r\n                      <Link url=\"https://www.prisma.io/\" target=\"_blank\" removeUnderline>\r\n                        Prisma\r\n                      </Link>\r\n                    </InlineStack>\r\n                    <InlineStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        Interface\r\n                      </Text>\r\n                      <span>\r\n                        <Link url=\"https://polaris.shopify.com\" target=\"_blank\" removeUnderline>\r\n                          Polaris\r\n                        </Link>\r\n                        {\", \"}\r\n                        <Link url=\"https://shopify.dev/docs/apps/tools/app-bridge\" target=\"_blank\" removeUnderline>\r\n                          App Bridge\r\n                        </Link>\r\n                      </span>\r\n                    </InlineStack>\r\n                    <InlineStack align=\"space-between\">\r\n                      <Text as=\"span\" variant=\"bodyMd\">\r\n                        API\r\n                      </Text>\r\n                      <Link url=\"https://shopify.dev/docs/api/admin-graphql\" target=\"_blank\" removeUnderline>\r\n                        GraphQL API\r\n                      </Link>\r\n                    </InlineStack>\r\n                  </BlockStack>\r\n                </BlockStack>\r\n              </Card>\r\n              <Card>\r\n                <BlockStack gap=\"200\">\r\n                  <Text as=\"h2\" variant=\"headingMd\">\r\n                    Next steps\r\n                  </Text>\r\n                  <List>\r\n                    <List.Item>\r\n                      Build an{\" \"}\r\n                      <Link url=\"https://shopify.dev/docs/apps/getting-started/build-app-example\" target=\"_blank\" removeUnderline>\r\n                        {\" \"}\r\n                        example app\r\n                      </Link>{\" \"}\r\n                      to get started\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      Explore Shopify\u2019s API with{\" \"}\r\n                      <Link url=\"https://shopify.dev/docs/apps/tools/graphiql-admin-api\" target=\"_blank\" removeUnderline>\r\n                        GraphiQL\r\n                      </Link>\r\n                    </List.Item>\r\n                  </List>\r\n                </BlockStack>\r\n              </Card>\r\n            </BlockStack>\r\n          </Layout.Section>\r\n        </Layout>\r\n      </BlockStack>\r\n    </Page>;\n}\n_s(Index, \"DJCLLfqNMkauIsSoxpEWeZL/QGs=\", false, function () {\n  return [useNavigation, useActionData, useSubmit];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["init_esm"]
}
